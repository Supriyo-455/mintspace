[Important]:
    - Create error page for displaying the errors
    - Protection against database not found
    - Make a search functionality
        - Use database indexing
        - Use memcached and elastic search
    - Use Object Relational Mapper for Database?
    - Secure the jwt token or use something to secure the login functionality
    - Use context for routes and database
    - Move mysql password and user credentials to a hidden file?
    - Create a method to get the blog id from database by passing certain filtering conditions
    - Make login required for premium contents and not for normal contents
    - Seperate mysql test database and prod database
    - Get user data struct when required
        -ref: https://stackoverflow.com/questions/46130446/fetching-logged-in-user-info-for-display
    - MVC architecture
    - Create a mechanism to create appropiate markdown file when creating blogs
    - Use Bluemonday for sanitizing unsafeHTML (XSS Attack prevention)
    - Singleton pattern and error handling for mysql database
    - Admin page
    - Form validations in blog writting page
    
    

[Future upgrades]:
    - Move to gin.
    - Dockerise the project
    - Use redis or memcache


[Current Status]:
    Working but blogs and accounts are not yet linked, also blog need to be stored inside db.


[Fixed things]:
    - Login page not showing. (FIX THIS) Date: 04-10-2023
    - Close database connection after closing the app
    - User created by the test function not showing inside database but the test is passing? (FIX THIS)
    - Redirect signup page to login page after successful user creation.
    - User password encryption using bcrypt
    - Remove sampleDb and sampleDbfuncs
    - Right now we are storing the blogs in a particular folder which will change in the future.
        The blog creation request struct stores blog content, Image url, title which we can store inside the database,
        so we need to update the blog fetching mechanism again from file based to database based.
        - Remove blogs folder, update all the dependencies of blogs folder to fetch blogs from mongo database.
        - Create detailed blog request which will have the followings
            - Author
            - Premium status
            - Date of creation
        - Store blog with this informations
    - jwt authentication for login and cookie storage for token
    - After login the home page is appearing blank
    - remove secret from jwtAuth.go to a hidden file
    - User profile page
    - Create methods to fetch blog list from mysql_storage and display list of blog in the main page
    - App crashing when entering wrong credentials. (FIX THIS) **VVIP
    - Redirect login page to home page if already authenticated
    - Improve variable scanning inside mysql_storage.go to be more compact