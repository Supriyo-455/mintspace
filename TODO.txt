[Important]:
    - Get the post request from blog create page
    - User password encryption using bcrypt
        =ref: https://heynode.com/blog/2020-04/salt-and-hash-passwords-bcrypt/
    - Get user data struct when required
        -ref: https://stackoverflow.com/questions/46130446/fetching-logged-in-user-info-for-display
    - Session based authentication for user
        -ref: https://dev.to/theghostmac/understanding-and-building-authentication-sessions-in-golang-1c9k 
    - MVC architecture
    - Create a mechanism to create appropiate markdown file when creating blogs
    - Use Bluemonday for sanitizing unsafeHTML (XSS Attack prevention)
    - Remove SampleDB functions
    - Seperate mongo test database and production database
    - Singleton pattern and error handling for mongo database
    - Use TemplateData struct for data passing between template and golang
    - Admin page
    - Create Blog writing page
    - Remove sampleDb and sampleDbfuncs


[Future upgrades]:
    - Dockerise the project
    - Cache the parsed markdown file result (Use redis or memcache)